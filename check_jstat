#!/bin/bash

# Nagios exit codes
readonly OK=0
readonly WARN=1
readonly CRIT=2
readonly UNKNOWN=3

# TODO: Thresholds
# TODO: Proper argument handling
name=$1
user=$2

if [ -z $user ]
then

    jps=`jps -v | grep $name`
else
    jps=`sudo -u $user jps -v | grep $name`
fi

if [ -z "$jps" ]
then
    echo "Cannot find process $name"
    exit $CRIT
fi

pid=`echo $jps | awk '{ print $1}'`
Xmx=`echo "$jps" | egrep -o 'Xmx[0-9]*[[:alpha:]]*' | uniq | egrep -o '[0-9]*'`
XmxUnits=`echo "$jps" | egrep -o 'Xmx[0-9]*[[:alpha:]]*' | uniq | egrep -o '[[:alpha:]]$'`

#Xms=`echo "$jps" | egrep -o 'Xms[0-9]*[[:alpha:]]*' | uniq`

echo "pid: $pid"
echo "Total heap: $Xmx $XmxUnits"

#echo "Initial heap: $Xms"

if [ -z $user ]
then
    jstat=`jstat -gc "$pid"`
else
    jstat=`sudo -u $user jstat -gc "$pid"`
fi

eval `echo $jstat | awk '{ for (i = 1; i <= (NF/2); i++) print $i"="$((NF/2)+i) }'`

#echo $S0C $S1C $S0U $S1U $EC $EU $OC $OU $PC $PU $YGC $YGCT $FGC $FGCT $GCT

capacity=`echo $S0C $S1C $EC $OC | awk '{sum=0; for (i = 1; i <= NF; i++) { sum += $i } print sum / 1024 }'`
usage=`echo $S0U $S1U $EU $OU | awk '{sum=0; for (i = 1; i <= NF; i++) { sum += $i } print sum / 1024 }'`
survivor=`echo $S0U $S1U | awk '{sum=0; for (i = 1; i <= NF; i++) { sum += $i } print sum  }'`
survivorcapacity=`echo $S0C $S1C | awk '{sum=0; for (i = 1; i <= NF; i++) { sum += $i } print sum }'`

echo "Minor GC / Time: $YGC / $YGCT"
echo "Major GC / Time: $FGC / $FGCT"
echo "---"
echo "Eden / Survivor / Old: $EU ($EC) / $survivor ($survivorcapacity) / $OU ($OC)"
echo "Total heap: $usage Mb /$capacity Mb"
